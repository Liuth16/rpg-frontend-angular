:host {
  display: block;
  height: 100vh;
  height: 100dvh;
  background: linear-gradient(
      180deg,
      rgba(47, 37, 36, 0.66) 0%,
      rgba(92, 67, 64, 0.5) 51.5%,
      rgba(128, 90, 85, 0.42) 100%
    ),
    linear-gradient(
      90deg,
      rgba(66, 50, 48, 0.42) 0%,
      rgba(66, 50, 48, 0) 33%,
      rgba(66, 50, 48, 0) 66%,
      rgba(66, 50, 48, 0.42) 100%
    ),
    radial-gradient(50% 50% at 50% 50%, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0) 100%),
    var(--background-image) center / cover no-repeat;
  background-blend-mode: overlay, multiply, normal, normal;
  padding: 1.5rem;
  box-sizing: border-box;
  overflow: auto;
}

::ng-deep .p-dialog {
  border: 15px solid transparent;
  border-image: var(--custom-border) 30 stretch;
  background: var(--background-details-image) center/220% 220% no-repeat;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.66);
}

/* Buttons: reuse blz-button style */
::ng-deep .p-dialog .p-dialog-footer .p-button,
.p-confirm-dialog-accept,
.p-confirm-dialog-reject {
  background: linear-gradient(
      180deg,
      rgba(47, 37, 36, 0.66) 0%,
      rgba(92, 67, 64, 0.5) 51.5%,
      rgba(128, 90, 85, 0.42) 100%
    ),
    linear-gradient(
      90deg,
      rgba(66, 50, 48, 0.42) 0%,
      rgba(66, 50, 48, 0) 33%,
      rgba(66, 50, 48, 0) 66%,
      rgba(66, 50, 48, 0.42) 100%
    ),
    radial-gradient(50% 50% at 50% 50%, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0) 100%),
    var(--buttontroll-background-image) 0% 0%/66px 66px round, #5c4340;
  background-blend-mode: overlay, multiply, normal, normal, normal;
  border: none;
  border-radius: 0.375rem;
  box-shadow: 0px 4px 6px 0px rgba(0, 0, 0, 0.66);
  color: #fff;
  font-weight: 600;
  padding: 0.5rem 1.25rem;
  cursor: pointer;
}
/* Layout */
.play-layout {
  display: flex;
  gap: 1.5rem;
  height: 100%;
  min-height: 0;
}

.left-panel {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
}

.right-panel {
  flex: 2;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-height: 0;
}

/* Chat */
.chat-panel {
  flex: 3;
  display: flex;
  flex-direction: column;
  min-height: 0;
  overflow: hidden;
}

.chat-log {
  flex: 1;
  overflow-y: auto;
  min-height: 0;
}

/* Input bar now separate */
.chat-input {
  flex-shrink: 0;
  display: flex;
  gap: 0.5rem;
}

/* Combat */

/* Crossed swords divider */
.swords-divider {
  width: 84px;
  min-width: 64px;
  aspect-ratio: 1 / 1;
  background: var(--swords-icon) center / contain no-repeat;
  filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.6));
}

/* Responsive: stack vertically on narrow screens and shrink swords */
@media (max-width: 768px) {
  .swords-divider {
    width: 56px;
    min-width: 48px;
  }
}

/* Mobile: stack panels vertically */
@media (max-width: 768px) {
  .play-layout {
    flex-direction: column; /* stack instead of side by side */
  }

  .left-panel,
  .right-panel {
    width: 100%;
    flex: none; /* don’t try to stretch unevenly */
    min-height: auto;
    max-height: 50vh;
  }

  /* Chat panel takes most of the vertical space */
  .chat-panel {
    flex: none; /* don’t let it eat infinite height */
    max-height: 70vh; /* chat gets half the screen */
    display: flex;
    flex-direction: column;
  }

  /* Combat panel follows below */
  .combat-panel {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    align-items: center;
    gap: 0;
  }

  /* Input bar pinned and easy to tap */
  .chat-input {
    position: sticky; /* stays visible when scrolling */
    bottom: 0;
    background: rgba(0, 0, 0, 0.4); /* keep contrast */
    padding: 0.5rem;
    z-index: 10;
  }

  /* Make input and button comfortable for thumb use */
  .chat-input input {
    font-size: 1rem;
    padding: 0.5rem;
  }
  .chat-input button {
    font-size: 1rem;
    padding: 0.5rem 1rem;
  }
}
